% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifier_helpers.R
\name{selector}
\alias{selector}
\title{Webglace::selector}
\description{
An R6 class allowing static and dynamic webpage scraping and interaction.
Allows for selection of elements using hierarchal CSS selectors or XPath for JS injection.
}
\examples{

## ------------------------------------------------
## Method `selector$new`
## ------------------------------------------------

Webglace::selector$new(css_self = "*", css_within = "div.class1", css_contains = "img.class2")

## ------------------------------------------------
## Method `selector$get_tag`
## ------------------------------------------------

selector$get_tag(css_in = "*")

## ------------------------------------------------
## Method `selector$get_classes`
## ------------------------------------------------

selector$get_classes(css_in = "*")

## ------------------------------------------------
## Method `selector$get_attr`
## ------------------------------------------------

selector$get_attr(css_in = "*")

## ------------------------------------------------
## Method `selector$xpath_classes`
## ------------------------------------------------

selector$xpath_classes(css_in = "*")

## ------------------------------------------------
## Method `selector$xpath_attrs`
## ------------------------------------------------

selector$xpath_attrs(css_in = "*")

## ------------------------------------------------
## Method `selector$xpath`
## ------------------------------------------------

selector$xpath()

## ------------------------------------------------
## Method `selector$scrape`
## ------------------------------------------------

selector$scrape(html_in = page[[1]])

## ------------------------------------------------
## Method `selector$js`
## ------------------------------------------------

selector$js(border = TRUE)

## ------------------------------------------------
## Method `selector$href`
## ------------------------------------------------

selector$href(html_in = page[[1]], na.rm = TRUE)

## ------------------------------------------------
## Method `selector$text`
## ------------------------------------------------

selector$text(html_in = page[[1]])

## ------------------------------------------------
## Method `selector$click`
## ------------------------------------------------

selector$click(
  remDr = remDr, 
  text = "my_button_text", 
  exact_text = TRUE, 
  offset = 2, 
  scroll_time = 3, 
  strict = FALSE
)

## ------------------------------------------------
## Method `selector$scroll`
## ------------------------------------------------

selector$scroll(remDr = remDr, px = 1000)

## ------------------------------------------------
## Method `selector$xpath_text`
## ------------------------------------------------

selector$xpath_text(
  text = "match_my_text", 
  exact = FALSE,
  xpath_in = "my_custom_xpath"
 )
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-selector-new}{\code{selector$new()}}
\item \href{#method-selector-get_tag}{\code{selector$get_tag()}}
\item \href{#method-selector-get_classes}{\code{selector$get_classes()}}
\item \href{#method-selector-get_attr}{\code{selector$get_attr()}}
\item \href{#method-selector-xpath_classes}{\code{selector$xpath_classes()}}
\item \href{#method-selector-xpath_attrs}{\code{selector$xpath_attrs()}}
\item \href{#method-selector-xpath}{\code{selector$xpath()}}
\item \href{#method-selector-scrape}{\code{selector$scrape()}}
\item \href{#method-selector-js}{\code{selector$js()}}
\item \href{#method-selector-href}{\code{selector$href()}}
\item \href{#method-selector-text}{\code{selector$text()}}
\item \href{#method-selector-click}{\code{selector$click()}}
\item \href{#method-selector-scroll}{\code{selector$scroll()}}
\item \href{#method-selector-xpath_text}{\code{selector$xpath_text()}}
\item \href{#method-selector-clone}{\code{selector$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-new"></a>}}
\if{latex}{\out{\hypertarget{method-selector-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$new(css_self = NULL, css_within = NULL, css_contains = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_self}}{CSS selector targeting the main element.}

\item{\code{css_within}}{CSS selector indentifying parent containers}

\item{\code{css_contains}}{CSS selector identifying the presence of child elements}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A webglace::selector class object
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Webglace::selector$new(css_self = "*", css_within = "div.class1", css_contains = "img.class2")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-get_tag"></a>}}
\if{latex}{\out{\hypertarget{method-selector-get_tag}{}}}
\subsection{Method \code{get_tag()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$get_tag(css_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_in}}{CSS selector string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The front tag portion of a css selector
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$get_tag(css_in = "*")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-get_classes"></a>}}
\if{latex}{\out{\hypertarget{method-selector-get_classes}{}}}
\subsection{Method \code{get_classes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$get_classes(css_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_in}}{CSS selector string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of css selector classes
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$get_classes(css_in = "*")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-get_attr"></a>}}
\if{latex}{\out{\hypertarget{method-selector-get_attr}{}}}
\subsection{Method \code{get_attr()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$get_attr(css_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_in}}{CSS selector string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of css selector attributes
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$get_attr(css_in = "*")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-xpath_classes"></a>}}
\if{latex}{\out{\hypertarget{method-selector-xpath_classes}{}}}
\subsection{Method \code{xpath_classes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$xpath_classes(css_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_in}}{CSS selector string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Class list ready for xpath parsing
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$xpath_classes(css_in = "*")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-xpath_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-selector-xpath_attrs}{}}}
\subsection{Method \code{xpath_attrs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$xpath_attrs(css_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{css_in}}{CSS selector string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Attribute list ready for xpath parsing
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$xpath_attrs(css_in = "*")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-xpath"></a>}}
\if{latex}{\out{\hypertarget{method-selector-xpath}{}}}
\subsection{Method \code{xpath()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$xpath()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A formatted xpath with ancestor and descendants included. Tags classes and attributes handled. May dislike special characters.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$xpath()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-scrape"></a>}}
\if{latex}{\out{\hypertarget{method-selector-scrape}{}}}
\subsection{Method \code{scrape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$scrape(html_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{html_in}}{An HTML node tree via rvest or XML.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A filtered HTML node tree
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$scrape(html_in = page[[1]])
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-js"></a>}}
\if{latex}{\out{\hypertarget{method-selector-js}{}}}
\subsection{Method \code{js()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$js(border = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{border}}{A TRUE/FALSE specifying whether to add or remove the red border highlight on a webpage.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A JS script string
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$js(border = TRUE)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-href"></a>}}
\if{latex}{\out{\hypertarget{method-selector-href}{}}}
\subsection{Method \code{href()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$href(html_in, rm.na = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{html_in}}{An rvest html node tree.}

\item{\code{rm.na}}{A TRUE/FALSE for removing NA href values.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An href list, useful for URL based recursion.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$href(html_in = page[[1]], na.rm = TRUE)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-text"></a>}}
\if{latex}{\out{\hypertarget{method-selector-text}{}}}
\subsection{Method \code{text()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$text(html_in)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{html_in}}{An revest style html node tree}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of text strings matched to nodes within the html using selectors.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$text(html_in = page[[1]])
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-click"></a>}}
\if{latex}{\out{\hypertarget{method-selector-click}{}}}
\subsection{Method \code{click()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$click(
  remDr,
  text = NULL,
  exact_text = FALSE,
  offset = NULL,
  scroll_time = NULL,
  strict = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{remDr}}{A selenium webdriver address}

\item{\code{text}}{A string, which if included is required to be present on the element to be clicked.}

\item{\code{exact_text}}{A logical, specifying whether substring or exact matching is to be used.}

\item{\code{offset}}{An integer allowing you to click on the second, third matching element etc.}

\item{\code{scroll_time}}{An integer, in seconds, specifying how long to spend scroling to the next element before continuing. Allows for offpage elements to be made visible before interaction.}

\item{\code{strict}}{A logical, specifying whether to use strict visibility constraints on user inputs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$click(
  remDr = remDr, 
  text = "my_button_text", 
  exact_text = TRUE, 
  offset = 2, 
  scroll_time = 3, 
  strict = FALSE
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-scroll"></a>}}
\if{latex}{\out{\hypertarget{method-selector-scroll}{}}}
\subsection{Method \code{scroll()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$scroll(remDr, px = 500)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{remDr}}{A selenium webdriver address}

\item{\code{px}}{Number of pixels to scroll down within the main window.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$scroll(remDr = remDr, px = 1000)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-xpath_text"></a>}}
\if{latex}{\out{\hypertarget{method-selector-xpath_text}{}}}
\subsection{Method \code{xpath_text()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$xpath_text(text, exact = FALSE, xpath_in = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{A string to match}

\item{\code{exact}}{Exact String match? TRUE/FALSE}

\item{\code{xpath_in}}{A string (optional) containing the xpath you want to injuect text matching into. By defaul, pulls from the internal selectors.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An xpath string
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{selector$xpath_text(
  text = "match_my_text", 
  exact = FALSE,
  xpath_in = "my_custom_xpath"
 )
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selector-clone"></a>}}
\if{latex}{\out{\hypertarget{method-selector-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{selector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
